//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eShopWinForms.eShopServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogItem", Namespace="http://schemas.datacontract.org/2004/07/eShopWCFService.Models")]
    public partial class CatalogItem : object
    {
        
        private eShopWinForms.eShopServiceReference.CatalogBrand CatalogBrandField;
        
        private int CatalogBrandIdField;
        
        private eShopWinForms.eShopServiceReference.CatalogType CatalogTypeField;
        
        private int CatalogTypeIdField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        private string PicturefilenameField;
        
        private decimal PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eShopWinForms.eShopServiceReference.CatalogBrand CatalogBrand
        {
            get
            {
                return this.CatalogBrandField;
            }
            set
            {
                this.CatalogBrandField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogBrandId
        {
            get
            {
                return this.CatalogBrandIdField;
            }
            set
            {
                this.CatalogBrandIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public eShopWinForms.eShopServiceReference.CatalogType CatalogType
        {
            get
            {
                return this.CatalogTypeField;
            }
            set
            {
                this.CatalogTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogTypeId
        {
            get
            {
                return this.CatalogTypeIdField;
            }
            set
            {
                this.CatalogTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picturefilename
        {
            get
            {
                return this.PicturefilenameField;
            }
            set
            {
                this.PicturefilenameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogBrand", Namespace="http://schemas.datacontract.org/2004/07/eShopWCFService.Models")]
    public partial class CatalogBrand : object
    {
        
        private string BrandField;
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand
        {
            get
            {
                return this.BrandField;
            }
            set
            {
                this.BrandField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogType", Namespace="http://schemas.datacontract.org/2004/07/eShopWCFService.Models")]
    public partial class CatalogType : object
    {
        
        private int IdField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogItemsStock", Namespace="http://schemas.datacontract.org/2004/07/eShopWCFService")]
    public partial class CatalogItemsStock : object
    {
        
        private int AvailableStockField;
        
        private int CatalogItemIdField;
        
        private System.DateTime DateField;
        
        private int StockIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvailableStock
        {
            get
            {
                return this.AvailableStockField;
            }
            set
            {
                this.AvailableStockField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogItemId
        {
            get
            {
                return this.CatalogItemIdField;
            }
            set
            {
                this.CatalogItemIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockId
        {
            get
            {
                return this.StockIdField;
            }
            set
            {
                this.StockIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiscountItem", Namespace="http://schemas.datacontract.org/2004/07/eShopWCFService.Models")]
    public partial class DiscountItem : object
    {
        
        private System.DateTime EndField;
        
        private int IdField;
        
        private double SizeField;
        
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End
        {
            get
            {
                return this.EndField;
            }
            set
            {
                this.EndField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start
        {
            get
            {
                return this.StartField;
            }
            set
            {
                this.StartField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="eShopWinForms.eShopServiceReference.ICatalogService")]
    public interface ICatalogService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/FindCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/FindCatalogItemResponse")]
        eShopWinForms.eShopServiceReference.CatalogItem FindCatalogItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/FindCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/FindCatalogItemResponse")]
        System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogItem> FindCatalogItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCatalogBrands", ReplyAction="http://tempuri.org/ICatalogService/GetCatalogBrandsResponse")]
        eShopWinForms.eShopServiceReference.CatalogBrand[] GetCatalogBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCatalogBrands", ReplyAction="http://tempuri.org/ICatalogService/GetCatalogBrandsResponse")]
        System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogBrand[]> GetCatalogBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCatalogItems", ReplyAction="http://tempuri.org/ICatalogService/GetCatalogItemsResponse")]
        eShopWinForms.eShopServiceReference.CatalogItem[] GetCatalogItems(int brandIdFilter, int typeIdFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCatalogItems", ReplyAction="http://tempuri.org/ICatalogService/GetCatalogItemsResponse")]
        System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogItem[]> GetCatalogItemsAsync(int brandIdFilter, int typeIdFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCatalogTypes", ReplyAction="http://tempuri.org/ICatalogService/GetCatalogTypesResponse")]
        eShopWinForms.eShopServiceReference.CatalogType[] GetCatalogTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetCatalogTypes", ReplyAction="http://tempuri.org/ICatalogService/GetCatalogTypesResponse")]
        System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogType[]> GetCatalogTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetAvailableStock", ReplyAction="http://tempuri.org/ICatalogService/GetAvailableStockResponse")]
        int GetAvailableStock(System.DateTime date, int catalogItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetAvailableStock", ReplyAction="http://tempuri.org/ICatalogService/GetAvailableStockResponse")]
        System.Threading.Tasks.Task<int> GetAvailableStockAsync(System.DateTime date, int catalogItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/CreateAvailableStock", ReplyAction="http://tempuri.org/ICatalogService/CreateAvailableStockResponse")]
        void CreateAvailableStock(eShopWinForms.eShopServiceReference.CatalogItemsStock catalogItemsStock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/CreateAvailableStock", ReplyAction="http://tempuri.org/ICatalogService/CreateAvailableStockResponse")]
        System.Threading.Tasks.Task CreateAvailableStockAsync(eShopWinForms.eShopServiceReference.CatalogItemsStock catalogItemsStock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/CreateCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/CreateCatalogItemResponse")]
        void CreateCatalogItem(eShopWinForms.eShopServiceReference.CatalogItem catalogItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/CreateCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/CreateCatalogItemResponse")]
        System.Threading.Tasks.Task CreateCatalogItemAsync(eShopWinForms.eShopServiceReference.CatalogItem catalogItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/UpdateCatalogItemResponse")]
        void UpdateCatalogItem(eShopWinForms.eShopServiceReference.CatalogItem catalogItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/UpdateCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/UpdateCatalogItemResponse")]
        System.Threading.Tasks.Task UpdateCatalogItemAsync(eShopWinForms.eShopServiceReference.CatalogItem catalogItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/RemoveCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/RemoveCatalogItemResponse")]
        void RemoveCatalogItem(eShopWinForms.eShopServiceReference.CatalogItem catalogItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/RemoveCatalogItem", ReplyAction="http://tempuri.org/ICatalogService/RemoveCatalogItemResponse")]
        System.Threading.Tasks.Task RemoveCatalogItemAsync(eShopWinForms.eShopServiceReference.CatalogItem catalogItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetDiscount", ReplyAction="http://tempuri.org/ICatalogService/GetDiscountResponse")]
        eShopWinForms.eShopServiceReference.DiscountItem GetDiscount(System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogService/GetDiscount", ReplyAction="http://tempuri.org/ICatalogService/GetDiscountResponse")]
        System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.DiscountItem> GetDiscountAsync(System.DateTime day);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public interface ICatalogServiceChannel : eShopWinForms.eShopServiceReference.ICatalogService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public partial class CatalogServiceClient : System.ServiceModel.ClientBase<eShopWinForms.eShopServiceReference.ICatalogService>, eShopWinForms.eShopServiceReference.ICatalogService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CatalogServiceClient() : 
                base(CatalogServiceClient.GetDefaultBinding(), CatalogServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ICatalogService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(CatalogServiceClient.GetBindingForEndpoint(endpointConfiguration), CatalogServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CatalogServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CatalogServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CatalogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public eShopWinForms.eShopServiceReference.CatalogItem FindCatalogItem(int id)
        {
            return base.Channel.FindCatalogItem(id);
        }
        
        public System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogItem> FindCatalogItemAsync(int id)
        {
            return base.Channel.FindCatalogItemAsync(id);
        }
        
        public eShopWinForms.eShopServiceReference.CatalogBrand[] GetCatalogBrands()
        {
            return base.Channel.GetCatalogBrands();
        }
        
        public System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogBrand[]> GetCatalogBrandsAsync()
        {
            return base.Channel.GetCatalogBrandsAsync();
        }
        
        public eShopWinForms.eShopServiceReference.CatalogItem[] GetCatalogItems(int brandIdFilter, int typeIdFilter)
        {
            return base.Channel.GetCatalogItems(brandIdFilter, typeIdFilter);
        }
        
        public System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogItem[]> GetCatalogItemsAsync(int brandIdFilter, int typeIdFilter)
        {
            return base.Channel.GetCatalogItemsAsync(brandIdFilter, typeIdFilter);
        }
        
        public eShopWinForms.eShopServiceReference.CatalogType[] GetCatalogTypes()
        {
            return base.Channel.GetCatalogTypes();
        }
        
        public System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.CatalogType[]> GetCatalogTypesAsync()
        {
            return base.Channel.GetCatalogTypesAsync();
        }
        
        public int GetAvailableStock(System.DateTime date, int catalogItemId)
        {
            return base.Channel.GetAvailableStock(date, catalogItemId);
        }
        
        public System.Threading.Tasks.Task<int> GetAvailableStockAsync(System.DateTime date, int catalogItemId)
        {
            return base.Channel.GetAvailableStockAsync(date, catalogItemId);
        }
        
        public void CreateAvailableStock(eShopWinForms.eShopServiceReference.CatalogItemsStock catalogItemsStock)
        {
            base.Channel.CreateAvailableStock(catalogItemsStock);
        }
        
        public System.Threading.Tasks.Task CreateAvailableStockAsync(eShopWinForms.eShopServiceReference.CatalogItemsStock catalogItemsStock)
        {
            return base.Channel.CreateAvailableStockAsync(catalogItemsStock);
        }
        
        public void CreateCatalogItem(eShopWinForms.eShopServiceReference.CatalogItem catalogItem)
        {
            base.Channel.CreateCatalogItem(catalogItem);
        }
        
        public System.Threading.Tasks.Task CreateCatalogItemAsync(eShopWinForms.eShopServiceReference.CatalogItem catalogItem)
        {
            return base.Channel.CreateCatalogItemAsync(catalogItem);
        }
        
        public void UpdateCatalogItem(eShopWinForms.eShopServiceReference.CatalogItem catalogItem)
        {
            base.Channel.UpdateCatalogItem(catalogItem);
        }
        
        public System.Threading.Tasks.Task UpdateCatalogItemAsync(eShopWinForms.eShopServiceReference.CatalogItem catalogItem)
        {
            return base.Channel.UpdateCatalogItemAsync(catalogItem);
        }
        
        public void RemoveCatalogItem(eShopWinForms.eShopServiceReference.CatalogItem catalogItem)
        {
            base.Channel.RemoveCatalogItem(catalogItem);
        }
        
        public System.Threading.Tasks.Task RemoveCatalogItemAsync(eShopWinForms.eShopServiceReference.CatalogItem catalogItem)
        {
            return base.Channel.RemoveCatalogItemAsync(catalogItem);
        }
        
        public eShopWinForms.eShopServiceReference.DiscountItem GetDiscount(System.DateTime day)
        {
            return base.Channel.GetDiscount(day);
        }
        
        public System.Threading.Tasks.Task<eShopWinForms.eShopServiceReference.DiscountItem> GetDiscountAsync(System.DateTime day)
        {
            return base.Channel.GetDiscountAsync(day);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICatalogService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICatalogService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:5113/CatalogService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CatalogServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICatalogService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CatalogServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICatalogService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ICatalogService,
        }
    }
}
