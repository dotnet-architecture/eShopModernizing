<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.1" />
  </startup>
  <System.Windows.Forms.ApplicationConfigurationSection>
    <add key="DpiAwareness" value="PerMonitorV2" />
  </System.Windows.Forms.ApplicationConfigurationSection>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_ICatalogService" />
      </basicHttpBinding>
    </bindings>
    <client>
      <!-- WCF endpoint to consume from within the Docker Host machine -->
      <!--<endpoint address="http://localhost:5200/CatalogService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICatalogService" contract="eShopServiceReference.ICatalogService" name="BasicHttpBinding_ICatalogService" />-->

      <!-- WCF endpoint to consume from within the Docker Host machine -->
      <!-- LOCALHOST/Loopback resolution should work in future versions of Windows. See: https://blogs.technet.microsoft.com/virtualization/2016/05/25/windows-nat-winnat-capabilities-and-limitations/ -->
       <endpoint address="http://localhost:5113/CatalogService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICatalogService" contract="eShopServiceReference.ICatalogService" name="BasicHttpBinding_ICatalogService"/> 

      <!-- WCF endpoint to consume when the WinForms is remote accessing through the network to the Docker Host-->
      <!-- <endpoint address="http://{YOUR-DOCKER-HOST-IP-OR-NAME}:5113/CatalogService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICatalogService" contract="eShopServiceReference.ICatalogService" name="BasicHttpBinding_ICatalogService"/> -->

    </client>
  </system.serviceModel>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>
